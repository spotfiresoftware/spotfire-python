name: Build and Test Package
on: [push, pull_request]
jobs:
  build:
    name: Packaging and Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_lint.txt
      - name: Static Analysis with pylint
        run: |
          pylint spotfire
      - name: Packaging
        run: |
          python setup.py sdist bdist_wheel
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: 'dist/**'
      - name: Determine Test Environments
        id: find-test-envs
        run: |
          echo -n "::set-output name=test-envs::[" > envs.txt
          ls test_requirements_* | sed -e 's/test_requirements_/"/' -e 's/.txt/"/' | tr '\n' ',' | sed -e 's/,$//' >> envs.txt
          echo "]" >> envs.txt
          cat envs.txt
    outputs:
      test-environments: ${{ steps.find-test-envs.outputs.test-envs }}
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        test-environment: ${{ fromJson(needs.build.outputs.test-environments) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements_${{ matrix.test-environment }}.txt
      - name: Run Tests
        run: |
          python -m spotfire.test
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results-${{ matrix.python-version }}-${{ matrix.test-environment }}
          path: 'results-*.xml'

